Q1: Who is the senior most employee based on job title?
-----------------------------------------------------------------------------
select * from music.employee 
order by levels desc
limit 1 ;
----------------------------------------------------------------------------

 Q2: Which countries have the most Invoices?
-------------------------------------------------------------------------------
select count(*) as C , billing_country 
from music.invoice 
group by billing_country
order by C desc  ;
-------------------------------------------------------------------------------

Q3: What are top 3 values of total invoice?
--------------------------------------------------------------------------------
select total from music.invoice
order by total desc
limit 3 ;
----------------------------------------------------------------------------------
 Q4: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals ? 
------------------------------------------------------------------------------------------------
select billing_city , sum(total) as Total from music.invoice
group by billing_city
order by Total desc
limit 1 ;
------------------------------------------------------------------------------------------------

Q5: Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A?
-----------------------------------------------------------------------------------------
select distinct first_name , last_name , email from music.customer
join music.invoice on customer.customer_id = invoice.invoice_id
join music.invoice_line on invoice.invoice_id = invoice_line.invoice_id
where track_id in (
select track_id from music.track 
join music.genre on track.genre_id = genre.genre_id
where genre.name = "Rock" )
order by email ;
----------------------------------------------------------------------------------------------

 Q6: Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first?

----------------------------------------------------------------------------------------------------------------
select name , milliseconds from music.track
where milliseconds > ( select avg(milliseconds) as avg_milliseconds from music.track)
order by milliseconds desc ;
---------------------------------------------------------------------------------------------

 Q7: We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre 
with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where 
the maximum number of purchases is shared return all Genres?

---------------------------------------------------------------------------------------------
with popular_genre as 
( 
  select count(invoice_line.quantity) as pur_amt , customer.country , genre.name , genre.genre_id , 
  row_number() over(partition by customer.country order by count(invoice_line.quantity) desc ) as rownum
  from music.invoice_line
  join music.invoice on invoice.invoice_id = invoice_line.invoice_id
  join music.customer on customer.customer_id = invoice.customer_id
  join music.track on track.track_id = invoice_line.track_id
  join music.genre on genre.genre_id = track.genre_id
  group by 2,3,4
  order by 2 asc , 1 desc 
  )

select * from popular_genre where rownum <= 1 ;
------------------------------------------------------------------------------------------------

Q8: Write a query that determines the customer that has spent the most on music for each country. 
Write a query that returns the country along with the top customer and how much they spent. 
For countries where the top amount spent is shared, provide all customers who spent this amount?

------------------------------------------------------------------------------------------------
with customer_with_country as (
 select customer.customer_id , first_name , last_name , billing_country , sum(total) as total_spending , 
 ROW_NUMBER () OVER ( partition by billing_country order by sum(total) desc ) as rownum
 from music.invoice 
 join music.customer on customer.customer_id = invoice.customer_id
 group by 1,2,3,4
 order by 4 asc , 5 desc )
 select * from customer_with_country where rownum <= 1 ;
------------------------------------------------------------------------------------------------
